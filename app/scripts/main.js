var centerX;var centerY;var radius = 3;var maxSeq = 0;var spline = null;var context = null;var animating = true;var startTime = new Date();var lastTime = 0;// Create an array of Fibonacci numbers of size nfunction fib(n) {  var seq = [];  var a = 0;  var b = 1;  var t;  while (n-- > 0) {    t = a;    a = b;    b += t;    seq.push(a);  }  return seq;}// Create an array of linearly increasing number of size nfunction linear(n) {  var seq = [];  for (var i = 0; i < n; i++) {    seq.push(i);  }  return seq;}// Helper function to convert a length to X,Yfunction calcXY(i, fibNum) {  var angle = (Math.PI / 20) * i;  var normX = Math.cos(angle) * (fibNum / maxSeq) * centerX;  var normY = Math.sin(angle) * (fibNum / maxSeq) * centerY;  var x = centerX + normX;   var y = centerY + normY;   return {x: x, y: y};}// Draw the spiral.(function draw(){  //var seq = fib(10);  var seq = linear(200);  var canvasEl = document.getElementById('fibonacci-canvas');  centerX = canvasEl.width / 2;  centerY = canvasEl.height / 2;  context = canvasEl.getContext('2d');  context.fillStyle = 'red';  maxSeq = seq[seq.length - 1];  var points = [];  for (var i = 0; i < seq.length; i++) {    var p = calcXY(i, seq[i]);    points.push(p);  }  spline = new Spline({    points: points,    stepLength: 0.1,    duration:10000});    spline.drawControlPoints(context, 'blue');    spline.draw(context, 'red');})();window.requestAnimFrame = (function(){  return  window.requestAnimationFrame       ||          window.webkitRequestAnimationFrame ||          window.mozRequestAnimationFrame    ||          function( callback ){            window.setTimeout(callback, 1000 / 60);          };})();// Draw the animation for the green dot along the spiral.(function animate(){  context.fillStyle = 'green';  var t = (new Date()).getTime()-startTime;  if(t<spline.duration) {    requestAnimFrame(animate);  }  if(lastTime == 0) {    lastTime = t;  }  var pos = spline.pos(t);  var vec = spline.vector(t);  context.beginPath();  context.arc(pos.x, pos.y, 5, 0, 2 * Math.PI, false);  context.closePath();  context.fill(); })();